version: '3.8'

services:
  # Main Application
  reflex-app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://reflex:reflex123@demo-db:5432/reflex_demo
      - REDIS_URL=redis://demo-redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY:-demo-key}
      - MODEL_NAME=gpt-4
      - SECRET_KEY=demo-secret-key-123
      - JWT_SECRET=demo-jwt-secret-123
      - SMTP_USERNAME=sparkroboticai@gmail.com
      - SMTP_PASSWORD=demo-password
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN:-demo-token}
      - GMAIL_CREDENTIALS_FILE=/app/demo-credentials.json
      - ASANA_ACCESS_TOKEN=${ASANA_ACCESS_TOKEN:-demo-token}
    volumes:
      - ./demo-data:/app/data
      - ./demo-credentials.json:/app/demo-credentials.json
    depends_on:
      - demo-db
      - demo-redis
    command: >
      sh -c "
        echo 'Starting Reflex AI Demo...' &&
        echo 'Loading demo data...' &&
        python scripts/load_demo_data.py &&
        echo 'Starting web server...' &&
        uvicorn src.app:app --host 0.0.0.0 --port 8000 --reload
      "

  # Demo Database
  demo-db:
    image: postgres:14
    environment:
      - POSTGRES_DB=reflex_demo
      - POSTGRES_USER=reflex
      - POSTGRES_PASSWORD=reflex123
    volumes:
      - demo_postgres_data:/var/lib/postgresql/data
      - ./scripts/init-demo-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  # Demo Redis
  demo-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - demo_redis_data:/data

  # Demo Analytics Dashboard
  demo-grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=demo123
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - demo_grafana_data:/var/lib/grafana
      - ./demo-config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./demo-config/grafana/datasources:/etc/grafana/provisioning/datasources

  # Demo Prometheus
  demo-prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./demo-config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - demo_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Demo Email Server (for testing)
  demo-mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI

volumes:
  demo_postgres_data:
  demo_redis_data:
  demo_grafana_data:
  demo_prometheus_data:

networks:
  default:
    name: reflex-demo-network 